/*
* generated by Xtext
*/
package org.smadl.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.xbase.services.XbaseGrammarAccess;
import org.eclipse.xtext.xbase.services.XtypeGrammarAccess;

@Singleton
public class SMADLGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class EntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Entity");
		private final Assignment cEntitiesAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cEntitiesSocialMachineParserRuleCall_0 = (RuleCall)cEntitiesAssignment.eContents().get(0);
		
		//Entity:
		//
		//	entities+=SocialMachine*;
		public ParserRule getRule() { return rule; }

		//entities+=SocialMachine*
		public Assignment getEntitiesAssignment() { return cEntitiesAssignment; }

		//SocialMachine
		public RuleCall getEntitiesSocialMachineParserRuleCall_0() { return cEntitiesSocialMachineParserRuleCall_0; }
	}

	public class SocialMachineElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SocialMachine");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSocialMachineKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameValidIDParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cRelatesToKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cDependenciesAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cDependenciesSocialMachineCrossReference_2_1_0 = (CrossReference)cDependenciesAssignment_2_1.eContents().get(0);
		private final RuleCall cDependenciesSocialMachineValidIDParserRuleCall_2_1_0_1 = (RuleCall)cDependenciesSocialMachineCrossReference_2_1_0.eContents().get(1);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cDependenciesAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final CrossReference cDependenciesSocialMachineCrossReference_2_2_1_0 = (CrossReference)cDependenciesAssignment_2_2_1.eContents().get(0);
		private final RuleCall cDependenciesSocialMachineValidIDParserRuleCall_2_2_1_0_1 = (RuleCall)cDependenciesSocialMachineCrossReference_2_2_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cGeneralConstraintsAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cGeneralConstraintsGeneralConstraintParserRuleCall_4_0_0 = (RuleCall)cGeneralConstraintsAssignment_4_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cRelationshipGroupAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cRelationshipGroupRelationshipGroupParserRuleCall_5_0 = (RuleCall)cRelationshipGroupAssignment_5.eContents().get(0);
		private final Assignment cConstructorsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cConstructorsComputationalUnitParserRuleCall_6_0 = (RuleCall)cConstructorsAssignment_6.eContents().get(0);
		private final Assignment cWrapperInterfaceAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cWrapperInterfaceProvidedServiceParserRuleCall_7_0 = (RuleCall)cWrapperInterfaceAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//SocialMachine:
		//
		//	"SocialMachine" name=ValidID ("relates to" dependencies+=[SocialMachine|ValidID] (","
		//
		//	dependencies+=[SocialMachine|ValidID])*)? "{" (generalConstraints=GeneralConstraint ";"?)?
		//
		//	relationshipGroup=RelationshipGroup? constructors+=ComputationalUnit* wrapperInterface+=ProvidedService* "}";
		public ParserRule getRule() { return rule; }

		//"SocialMachine" name=ValidID ("relates to" dependencies+=[SocialMachine|ValidID] (","
		//
		//dependencies+=[SocialMachine|ValidID])*)? "{" (generalConstraints=GeneralConstraint ";"?)?
		//
		//relationshipGroup=RelationshipGroup? constructors+=ComputationalUnit* wrapperInterface+=ProvidedService* "}"
		public Group getGroup() { return cGroup; }

		//"SocialMachine"
		public Keyword getSocialMachineKeyword_0() { return cSocialMachineKeyword_0; }

		//name=ValidID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_1_0() { return cNameValidIDParserRuleCall_1_0; }

		//("relates to" dependencies+=[SocialMachine|ValidID] ("," dependencies+=[SocialMachine|ValidID])*)?
		public Group getGroup_2() { return cGroup_2; }

		//"relates to"
		public Keyword getRelatesToKeyword_2_0() { return cRelatesToKeyword_2_0; }

		//dependencies+=[SocialMachine|ValidID]
		public Assignment getDependenciesAssignment_2_1() { return cDependenciesAssignment_2_1; }

		//[SocialMachine|ValidID]
		public CrossReference getDependenciesSocialMachineCrossReference_2_1_0() { return cDependenciesSocialMachineCrossReference_2_1_0; }

		//ValidID
		public RuleCall getDependenciesSocialMachineValidIDParserRuleCall_2_1_0_1() { return cDependenciesSocialMachineValidIDParserRuleCall_2_1_0_1; }

		//("," dependencies+=[SocialMachine|ValidID])*
		public Group getGroup_2_2() { return cGroup_2_2; }

		//","
		public Keyword getCommaKeyword_2_2_0() { return cCommaKeyword_2_2_0; }

		//dependencies+=[SocialMachine|ValidID]
		public Assignment getDependenciesAssignment_2_2_1() { return cDependenciesAssignment_2_2_1; }

		//[SocialMachine|ValidID]
		public CrossReference getDependenciesSocialMachineCrossReference_2_2_1_0() { return cDependenciesSocialMachineCrossReference_2_2_1_0; }

		//ValidID
		public RuleCall getDependenciesSocialMachineValidIDParserRuleCall_2_2_1_0_1() { return cDependenciesSocialMachineValidIDParserRuleCall_2_2_1_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//(generalConstraints=GeneralConstraint ";"?)?
		public Group getGroup_4() { return cGroup_4; }

		//generalConstraints=GeneralConstraint
		public Assignment getGeneralConstraintsAssignment_4_0() { return cGeneralConstraintsAssignment_4_0; }

		//GeneralConstraint
		public RuleCall getGeneralConstraintsGeneralConstraintParserRuleCall_4_0_0() { return cGeneralConstraintsGeneralConstraintParserRuleCall_4_0_0; }

		//";"?
		public Keyword getSemicolonKeyword_4_1() { return cSemicolonKeyword_4_1; }

		//relationshipGroup=RelationshipGroup?
		public Assignment getRelationshipGroupAssignment_5() { return cRelationshipGroupAssignment_5; }

		//RelationshipGroup
		public RuleCall getRelationshipGroupRelationshipGroupParserRuleCall_5_0() { return cRelationshipGroupRelationshipGroupParserRuleCall_5_0; }

		//constructors+=ComputationalUnit*
		public Assignment getConstructorsAssignment_6() { return cConstructorsAssignment_6; }

		//ComputationalUnit
		public RuleCall getConstructorsComputationalUnitParserRuleCall_6_0() { return cConstructorsComputationalUnitParserRuleCall_6_0; }

		//wrapperInterface+=ProvidedService*
		public Assignment getWrapperInterfaceAssignment_7() { return cWrapperInterfaceAssignment_7; }

		//ProvidedService
		public RuleCall getWrapperInterfaceProvidedServiceParserRuleCall_7_0() { return cWrapperInterfaceProvidedServiceParserRuleCall_7_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class RelationshipGroupElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RelationshipGroup");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRelationshipsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cRelationshipsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Alternatives cRelationshipsAlternatives_2_0 = (Alternatives)cRelationshipsAssignment_2.eContents().get(0);
		private final RuleCall cRelationshipsOAuthRelationshipParserRuleCall_2_0_0 = (RuleCall)cRelationshipsAlternatives_2_0.eContents().get(0);
		private final RuleCall cRelationshipsGeneralRelationshipParserRuleCall_2_0_1 = (RuleCall)cRelationshipsAlternatives_2_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//RelationshipGroup:
		//
		//	"Relationships" "{" relationships+=(OAuthRelationship | GeneralRelationship)+ "}";
		public ParserRule getRule() { return rule; }

		//"Relationships" "{" relationships+=(OAuthRelationship | GeneralRelationship)+ "}"
		public Group getGroup() { return cGroup; }

		//"Relationships"
		public Keyword getRelationshipsKeyword_0() { return cRelationshipsKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//relationships+=(OAuthRelationship | GeneralRelationship)+
		public Assignment getRelationshipsAssignment_2() { return cRelationshipsAssignment_2; }

		//OAuthRelationship | GeneralRelationship
		public Alternatives getRelationshipsAlternatives_2_0() { return cRelationshipsAlternatives_2_0; }

		//OAuthRelationship
		public RuleCall getRelationshipsOAuthRelationshipParserRuleCall_2_0_0() { return cRelationshipsOAuthRelationshipParserRuleCall_2_0_0; }

		//GeneralRelationship
		public RuleCall getRelationshipsGeneralRelationshipParserRuleCall_2_0_1() { return cRelationshipsGeneralRelationshipParserRuleCall_2_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class OAuthRelationshipElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OAuthRelationship");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameValidIDParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cWithKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTargetAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cTargetSocialMachineCrossReference_2_0 = (CrossReference)cTargetAssignment_2.eContents().get(0);
		private final RuleCall cTargetSocialMachineValidIDParserRuleCall_2_0_1 = (RuleCall)cTargetSocialMachineCrossReference_2_0.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cUriKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cEqualsSignKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cUriAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cUriSTRINGTerminalRuleCall_6_0 = (RuleCall)cUriAssignment_6.eContents().get(0);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cApiKeyKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cEqualsSignKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cApiKeyAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cApiKeySTRINGTerminalRuleCall_10_0 = (RuleCall)cApiKeyAssignment_10.eContents().get(0);
		private final Keyword cSemicolonKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cSecretKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cEqualsSignKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cSecretAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cSecretSTRINGTerminalRuleCall_14_0 = (RuleCall)cSecretAssignment_14.eContents().get(0);
		private final Keyword cSemicolonKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Keyword cUserTokenKeyword_16 = (Keyword)cGroup.eContents().get(16);
		private final Keyword cEqualsSignKeyword_17 = (Keyword)cGroup.eContents().get(17);
		private final Assignment cUserTokenAssignment_18 = (Assignment)cGroup.eContents().get(18);
		private final RuleCall cUserTokenSTRINGTerminalRuleCall_18_0 = (RuleCall)cUserTokenAssignment_18.eContents().get(0);
		private final Keyword cSemicolonKeyword_19 = (Keyword)cGroup.eContents().get(19);
		private final Keyword cRightSquareBracketKeyword_20 = (Keyword)cGroup.eContents().get(20);
		private final Assignment cConstraintAssignment_21 = (Assignment)cGroup.eContents().get(21);
		private final RuleCall cConstraintRelationshipConstraintParserRuleCall_21_0 = (RuleCall)cConstraintAssignment_21.eContents().get(0);
		
		//OAuthRelationship:
		//
		//	name=ValidID "with" target=[SocialMachine|ValidID] "[" "uri" "=" uri=STRING ";"? "api-key" "=" apiKey=STRING ";"?
		//
		//	"secret" "=" secret=STRING ";"? "user-token" "=" userToken=STRING ";"? "]" constraint=RelationshipConstraint?;
		public ParserRule getRule() { return rule; }

		//name=ValidID "with" target=[SocialMachine|ValidID] "[" "uri" "=" uri=STRING ";"? "api-key" "=" apiKey=STRING ";"?
		//
		//"secret" "=" secret=STRING ";"? "user-token" "=" userToken=STRING ";"? "]" constraint=RelationshipConstraint?
		public Group getGroup() { return cGroup; }

		//name=ValidID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_0_0() { return cNameValidIDParserRuleCall_0_0; }

		//"with"
		public Keyword getWithKeyword_1() { return cWithKeyword_1; }

		//target=[SocialMachine|ValidID]
		public Assignment getTargetAssignment_2() { return cTargetAssignment_2; }

		//[SocialMachine|ValidID]
		public CrossReference getTargetSocialMachineCrossReference_2_0() { return cTargetSocialMachineCrossReference_2_0; }

		//ValidID
		public RuleCall getTargetSocialMachineValidIDParserRuleCall_2_0_1() { return cTargetSocialMachineValidIDParserRuleCall_2_0_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_3() { return cLeftSquareBracketKeyword_3; }

		//"uri"
		public Keyword getUriKeyword_4() { return cUriKeyword_4; }

		//"="
		public Keyword getEqualsSignKeyword_5() { return cEqualsSignKeyword_5; }

		//uri=STRING
		public Assignment getUriAssignment_6() { return cUriAssignment_6; }

		//STRING
		public RuleCall getUriSTRINGTerminalRuleCall_6_0() { return cUriSTRINGTerminalRuleCall_6_0; }

		//";"?
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }

		//"api-key"
		public Keyword getApiKeyKeyword_8() { return cApiKeyKeyword_8; }

		//"="
		public Keyword getEqualsSignKeyword_9() { return cEqualsSignKeyword_9; }

		//apiKey=STRING
		public Assignment getApiKeyAssignment_10() { return cApiKeyAssignment_10; }

		//STRING
		public RuleCall getApiKeySTRINGTerminalRuleCall_10_0() { return cApiKeySTRINGTerminalRuleCall_10_0; }

		//";"?
		public Keyword getSemicolonKeyword_11() { return cSemicolonKeyword_11; }

		//"secret"
		public Keyword getSecretKeyword_12() { return cSecretKeyword_12; }

		//"="
		public Keyword getEqualsSignKeyword_13() { return cEqualsSignKeyword_13; }

		//secret=STRING
		public Assignment getSecretAssignment_14() { return cSecretAssignment_14; }

		//STRING
		public RuleCall getSecretSTRINGTerminalRuleCall_14_0() { return cSecretSTRINGTerminalRuleCall_14_0; }

		//";"?
		public Keyword getSemicolonKeyword_15() { return cSemicolonKeyword_15; }

		//"user-token"
		public Keyword getUserTokenKeyword_16() { return cUserTokenKeyword_16; }

		//"="
		public Keyword getEqualsSignKeyword_17() { return cEqualsSignKeyword_17; }

		//userToken=STRING
		public Assignment getUserTokenAssignment_18() { return cUserTokenAssignment_18; }

		//STRING
		public RuleCall getUserTokenSTRINGTerminalRuleCall_18_0() { return cUserTokenSTRINGTerminalRuleCall_18_0; }

		//";"?
		public Keyword getSemicolonKeyword_19() { return cSemicolonKeyword_19; }

		//"]"
		public Keyword getRightSquareBracketKeyword_20() { return cRightSquareBracketKeyword_20; }

		//constraint=RelationshipConstraint?
		public Assignment getConstraintAssignment_21() { return cConstraintAssignment_21; }

		//RelationshipConstraint
		public RuleCall getConstraintRelationshipConstraintParserRuleCall_21_0() { return cConstraintRelationshipConstraintParserRuleCall_21_0; }
	}

	public class GeneralRelationshipElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GeneralRelationship");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameValidIDParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cWithKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTargetAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cTargetSocialMachineCrossReference_2_0 = (CrossReference)cTargetAssignment_2.eContents().get(0);
		private final RuleCall cTargetSocialMachineValidIDParserRuleCall_2_0_1 = (RuleCall)cTargetSocialMachineCrossReference_2_0.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cConfigParamsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cConfigParamsGeneralConfigParameterParserRuleCall_4_0 = (RuleCall)cConfigParamsAssignment_4.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cConstraintAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cConstraintRelationshipConstraintParserRuleCall_6_0 = (RuleCall)cConstraintAssignment_6.eContents().get(0);
		
		//GeneralRelationship:
		//
		//	name=ValidID "with" target=[SocialMachine|ValidID] "[" configParams+=GeneralConfigParameter* "]"
		//
		//	constraint=RelationshipConstraint?;
		public ParserRule getRule() { return rule; }

		//name=ValidID "with" target=[SocialMachine|ValidID] "[" configParams+=GeneralConfigParameter* "]"
		//
		//constraint=RelationshipConstraint?
		public Group getGroup() { return cGroup; }

		//name=ValidID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_0_0() { return cNameValidIDParserRuleCall_0_0; }

		//"with"
		public Keyword getWithKeyword_1() { return cWithKeyword_1; }

		//target=[SocialMachine|ValidID]
		public Assignment getTargetAssignment_2() { return cTargetAssignment_2; }

		//[SocialMachine|ValidID]
		public CrossReference getTargetSocialMachineCrossReference_2_0() { return cTargetSocialMachineCrossReference_2_0; }

		//ValidID
		public RuleCall getTargetSocialMachineValidIDParserRuleCall_2_0_1() { return cTargetSocialMachineValidIDParserRuleCall_2_0_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_3() { return cLeftSquareBracketKeyword_3; }

		//configParams+=GeneralConfigParameter*
		public Assignment getConfigParamsAssignment_4() { return cConfigParamsAssignment_4; }

		//GeneralConfigParameter
		public RuleCall getConfigParamsGeneralConfigParameterParserRuleCall_4_0() { return cConfigParamsGeneralConfigParameterParserRuleCall_4_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }

		//constraint=RelationshipConstraint?
		public Assignment getConstraintAssignment_6() { return cConstraintAssignment_6; }

		//RelationshipConstraint
		public RuleCall getConstraintRelationshipConstraintParserRuleCall_6_0() { return cConstraintRelationshipConstraintParserRuleCall_6_0; }
	}

	public class GeneralConfigParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GeneralConfigParameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameValidIDParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Alternatives cValueAlternatives_2_0 = (Alternatives)cValueAssignment_2.eContents().get(0);
		private final RuleCall cValueNumberParserRuleCall_2_0_0 = (RuleCall)cValueAlternatives_2_0.eContents().get(0);
		private final RuleCall cValueSTRINGTerminalRuleCall_2_0_1 = (RuleCall)cValueAlternatives_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//GeneralConfigParameter:
		//
		//	name=ValidID "=" value=(Number | STRING) ";"?;
		public ParserRule getRule() { return rule; }

		//name=ValidID "=" value=(Number | STRING) ";"?
		public Group getGroup() { return cGroup; }

		//name=ValidID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_0_0() { return cNameValidIDParserRuleCall_0_0; }

		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//value=(Number | STRING)
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//Number | STRING
		public Alternatives getValueAlternatives_2_0() { return cValueAlternatives_2_0; }

		//Number
		public RuleCall getValueNumberParserRuleCall_2_0_0() { return cValueNumberParserRuleCall_2_0_0; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_2_0_1() { return cValueSTRINGTerminalRuleCall_2_0_1; }

		//";"?
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}

	public class RelationshipConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RelationshipConstraint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Alternatives cTypeAlternatives_2_0 = (Alternatives)cTypeAssignment_2.eContents().get(0);
		private final RuleCall cTypeRelationshipConstraintFullAccessParserRuleCall_2_0_0 = (RuleCall)cTypeAlternatives_2_0.eContents().get(0);
		private final RuleCall cTypeRelationshipConstraintListOfOpsParserRuleCall_2_0_1 = (RuleCall)cTypeAlternatives_2_0.eContents().get(1);
		
		//RelationshipConstraint:
		//
		//	"type" ":" type=(RelationshipConstraintFullAccess | RelationshipConstraintListOfOps);
		public ParserRule getRule() { return rule; }

		//"type" ":" type=(RelationshipConstraintFullAccess | RelationshipConstraintListOfOps)
		public Group getGroup() { return cGroup; }

		//"type"
		public Keyword getTypeKeyword_0() { return cTypeKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//type=(RelationshipConstraintFullAccess | RelationshipConstraintListOfOps)
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }

		//RelationshipConstraintFullAccess | RelationshipConstraintListOfOps
		public Alternatives getTypeAlternatives_2_0() { return cTypeAlternatives_2_0; }

		//RelationshipConstraintFullAccess
		public RuleCall getTypeRelationshipConstraintFullAccessParserRuleCall_2_0_0() { return cTypeRelationshipConstraintFullAccessParserRuleCall_2_0_0; }

		//RelationshipConstraintListOfOps
		public RuleCall getTypeRelationshipConstraintListOfOpsParserRuleCall_2_0_1() { return cTypeRelationshipConstraintListOfOpsParserRuleCall_2_0_1; }
	}

	public class RelationshipConstraintFullAccessElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RelationshipConstraintFullAccess");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final Keyword cNameFULL_ACCESSKeyword_0 = (Keyword)cNameAssignment.eContents().get(0);
		
		//RelationshipConstraintFullAccess:
		//
		//	name="FULL_ACCESS";
		public ParserRule getRule() { return rule; }

		//name="FULL_ACCESS"
		public Assignment getNameAssignment() { return cNameAssignment; }

		//"FULL_ACCESS"
		public Keyword getNameFULL_ACCESSKeyword_0() { return cNameFULL_ACCESSKeyword_0; }
	}

	public class RelationshipConstraintListOfOpsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RelationshipConstraintListOfOps");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cNameLIST_OF_OPSKeyword_0_0 = (Keyword)cNameAssignment_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOperationsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cOperationsProvidedServiceCrossReference_2_0 = (CrossReference)cOperationsAssignment_2.eContents().get(0);
		private final RuleCall cOperationsProvidedServiceIDTerminalRuleCall_2_0_1 = (RuleCall)cOperationsProvidedServiceCrossReference_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cOperationsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cOperationsProvidedServiceCrossReference_3_1_0 = (CrossReference)cOperationsAssignment_3_1.eContents().get(0);
		private final RuleCall cOperationsProvidedServiceIDTerminalRuleCall_3_1_0_1 = (RuleCall)cOperationsProvidedServiceCrossReference_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//RelationshipConstraintListOfOps:
		//
		//	name="LIST_OF_OPS" "(" operations+=[ProvidedService] ("," operations+=[ProvidedService])* ")";
		public ParserRule getRule() { return rule; }

		//name="LIST_OF_OPS" "(" operations+=[ProvidedService] ("," operations+=[ProvidedService])* ")"
		public Group getGroup() { return cGroup; }

		//name="LIST_OF_OPS"
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//"LIST_OF_OPS"
		public Keyword getNameLIST_OF_OPSKeyword_0_0() { return cNameLIST_OF_OPSKeyword_0_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }

		//operations+=[ProvidedService]
		public Assignment getOperationsAssignment_2() { return cOperationsAssignment_2; }

		//[ProvidedService]
		public CrossReference getOperationsProvidedServiceCrossReference_2_0() { return cOperationsProvidedServiceCrossReference_2_0; }

		//ID
		public RuleCall getOperationsProvidedServiceIDTerminalRuleCall_2_0_1() { return cOperationsProvidedServiceIDTerminalRuleCall_2_0_1; }

		//("," operations+=[ProvidedService])*
		public Group getGroup_3() { return cGroup_3; }

		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }

		//operations+=[ProvidedService]
		public Assignment getOperationsAssignment_3_1() { return cOperationsAssignment_3_1; }

		//[ProvidedService]
		public CrossReference getOperationsProvidedServiceCrossReference_3_1_0() { return cOperationsProvidedServiceCrossReference_3_1_0; }

		//ID
		public RuleCall getOperationsProvidedServiceIDTerminalRuleCall_3_1_0_1() { return cOperationsProvidedServiceIDTerminalRuleCall_3_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}

	public class ComputationalUnitElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ComputationalUnit");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cComputationalUnitAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cConstructorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cParametersAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cParametersFullJvmFormalParameterParserRuleCall_3_0 = (RuleCall)cParametersAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cParametersAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cParametersFullJvmFormalParameterParserRuleCall_4_1_0 = (RuleCall)cParametersAssignment_4_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cBodyAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cBodyXBlockExpressionParserRuleCall_6_0 = (RuleCall)cBodyAssignment_6.eContents().get(0);
		
		//ComputationalUnit:
		//
		//	{ComputationalUnit} "constructor" "(" parameters+=FullJvmFormalParameter* ("," parameters+=FullJvmFormalParameter)*
		//
		//	")" body=XBlockExpression?;
		public ParserRule getRule() { return rule; }

		//{ComputationalUnit} "constructor" "(" parameters+=FullJvmFormalParameter* ("," parameters+=FullJvmFormalParameter)* ")"
		//
		//body=XBlockExpression?
		public Group getGroup() { return cGroup; }

		//{ComputationalUnit}
		public Action getComputationalUnitAction_0() { return cComputationalUnitAction_0; }

		//"constructor"
		public Keyword getConstructorKeyword_1() { return cConstructorKeyword_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//parameters+=FullJvmFormalParameter*
		public Assignment getParametersAssignment_3() { return cParametersAssignment_3; }

		//FullJvmFormalParameter
		public RuleCall getParametersFullJvmFormalParameterParserRuleCall_3_0() { return cParametersFullJvmFormalParameterParserRuleCall_3_0; }

		//("," parameters+=FullJvmFormalParameter)*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//parameters+=FullJvmFormalParameter
		public Assignment getParametersAssignment_4_1() { return cParametersAssignment_4_1; }

		//FullJvmFormalParameter
		public RuleCall getParametersFullJvmFormalParameterParserRuleCall_4_1_0() { return cParametersFullJvmFormalParameterParserRuleCall_4_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }

		//body=XBlockExpression?
		public Assignment getBodyAssignment_6() { return cBodyAssignment_6; }

		//XBlockExpression
		public RuleCall getBodyXBlockExpressionParserRuleCall_6_0() { return cBodyXBlockExpressionParserRuleCall_6_0; }
	}

	public class ProvidedServiceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ProvidedService");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cProvidedServiceAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cOpKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameValidIDParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cReturnsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cReturnTypeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cReturnTypeJvmTypeReferenceParserRuleCall_3_1_0 = (RuleCall)cReturnTypeAssignment_3_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cParametersAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cParametersFullJvmFormalParameterParserRuleCall_5_0 = (RuleCall)cParametersAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cParametersAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cParametersFullJvmFormalParameterParserRuleCall_6_1_0 = (RuleCall)cParametersAssignment_6_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cOpConstraintAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cOpConstraintOperationConstraintParserRuleCall_8_0 = (RuleCall)cOpConstraintAssignment_8.eContents().get(0);
		
		//ProvidedService:
		//
		//	{ProvidedService} "op" name=ValidID ("returns" returnType=JvmTypeReference)? "(" parameters+=FullJvmFormalParameter*
		//
		//	("," parameters+=FullJvmFormalParameter)* ")" opConstraint=OperationConstraint?;
		public ParserRule getRule() { return rule; }

		//{ProvidedService} "op" name=ValidID ("returns" returnType=JvmTypeReference)? "(" parameters+=FullJvmFormalParameter*
		//
		//("," parameters+=FullJvmFormalParameter)* ")" opConstraint=OperationConstraint?
		public Group getGroup() { return cGroup; }

		//{ProvidedService}
		public Action getProvidedServiceAction_0() { return cProvidedServiceAction_0; }

		//"op"
		public Keyword getOpKeyword_1() { return cOpKeyword_1; }

		//name=ValidID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_0() { return cNameValidIDParserRuleCall_2_0; }

		//("returns" returnType=JvmTypeReference)?
		public Group getGroup_3() { return cGroup_3; }

		//"returns"
		public Keyword getReturnsKeyword_3_0() { return cReturnsKeyword_3_0; }

		//returnType=JvmTypeReference
		public Assignment getReturnTypeAssignment_3_1() { return cReturnTypeAssignment_3_1; }

		//JvmTypeReference
		public RuleCall getReturnTypeJvmTypeReferenceParserRuleCall_3_1_0() { return cReturnTypeJvmTypeReferenceParserRuleCall_3_1_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_4() { return cLeftParenthesisKeyword_4; }

		//parameters+=FullJvmFormalParameter*
		public Assignment getParametersAssignment_5() { return cParametersAssignment_5; }

		//FullJvmFormalParameter
		public RuleCall getParametersFullJvmFormalParameterParserRuleCall_5_0() { return cParametersFullJvmFormalParameterParserRuleCall_5_0; }

		//("," parameters+=FullJvmFormalParameter)*
		public Group getGroup_6() { return cGroup_6; }

		//","
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }

		//parameters+=FullJvmFormalParameter
		public Assignment getParametersAssignment_6_1() { return cParametersAssignment_6_1; }

		//FullJvmFormalParameter
		public RuleCall getParametersFullJvmFormalParameterParserRuleCall_6_1_0() { return cParametersFullJvmFormalParameterParserRuleCall_6_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }

		//opConstraint=OperationConstraint?
		public Assignment getOpConstraintAssignment_8() { return cOpConstraintAssignment_8; }

		//OperationConstraint
		public RuleCall getOpConstraintOperationConstraintParserRuleCall_8_0() { return cOpConstraintOperationConstraintParserRuleCall_8_0; }
	}

	public class OperationConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OperationConstraint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cConstraintKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTypeOperationConstraintTypeEnumRuleCall_1_0 = (RuleCall)cTypeAssignment_1.eContents().get(0);
		
		//OperationConstraint:
		//
		//	"constraint" type+=OperationConstraintType+;
		public ParserRule getRule() { return rule; }

		//"constraint" type+=OperationConstraintType+
		public Group getGroup() { return cGroup; }

		//"constraint"
		public Keyword getConstraintKeyword_0() { return cConstraintKeyword_0; }

		//type+=OperationConstraintType+
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }

		//OperationConstraintType
		public RuleCall getTypeOperationConstraintTypeEnumRuleCall_1_0() { return cTypeOperationConstraintTypeEnumRuleCall_1_0; }
	}

	public class GeneralConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GeneralConstraint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGeneralConstraintKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTypeOperationConstraintTypeEnumRuleCall_1_0 = (RuleCall)cTypeAssignment_1.eContents().get(0);
		
		//GeneralConstraint:
		//
		//	"general constraint" type=OperationConstraintType;
		public ParserRule getRule() { return rule; }

		//"general constraint" type=OperationConstraintType
		public Group getGroup() { return cGroup; }

		//"general constraint"
		public Keyword getGeneralConstraintKeyword_0() { return cGeneralConstraintKeyword_0; }

		//type=OperationConstraintType
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }

		//OperationConstraintType
		public RuleCall getTypeOperationConstraintTypeEnumRuleCall_1_0() { return cTypeOperationConstraintTypeEnumRuleCall_1_0; }
	}
	
	
	public class OperationConstraintTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "OperationConstraintType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cUNLIMITEDEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cUNLIMITEDUNLIMITEDKeyword_0_0 = (Keyword)cUNLIMITEDEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cREQUESTS_PER_PERIODEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cREQUESTS_PER_PERIODREQUESTS_PER_PERIODKeyword_1_0 = (Keyword)cREQUESTS_PER_PERIODEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cPRE_AUTH_SMEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cPRE_AUTH_SMPRE_AUTH_SMKeyword_2_0 = (Keyword)cPRE_AUTH_SMEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cREDUCED_RESOURCEEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cREDUCED_RESOURCEREDUCED_RESOURCEKeyword_3_0 = (Keyword)cREDUCED_RESOURCEEnumLiteralDeclaration_3.eContents().get(0);
		
		////Four constraint types that can be used in specific or general constraints
		//
		//enum OperationConstraintType:
		//
		//	UNLIMITED | REQUESTS_PER_PERIOD | PRE_AUTH_SM | REDUCED_RESOURCE;
		public EnumRule getRule() { return rule; }

		//UNLIMITED | REQUESTS_PER_PERIOD | PRE_AUTH_SM | REDUCED_RESOURCE
		public Alternatives getAlternatives() { return cAlternatives; }

		//UNLIMITED
		public EnumLiteralDeclaration getUNLIMITEDEnumLiteralDeclaration_0() { return cUNLIMITEDEnumLiteralDeclaration_0; }

		//"UNLIMITED"
		public Keyword getUNLIMITEDUNLIMITEDKeyword_0_0() { return cUNLIMITEDUNLIMITEDKeyword_0_0; }

		//REQUESTS_PER_PERIOD
		public EnumLiteralDeclaration getREQUESTS_PER_PERIODEnumLiteralDeclaration_1() { return cREQUESTS_PER_PERIODEnumLiteralDeclaration_1; }

		//"REQUESTS_PER_PERIOD"
		public Keyword getREQUESTS_PER_PERIODREQUESTS_PER_PERIODKeyword_1_0() { return cREQUESTS_PER_PERIODREQUESTS_PER_PERIODKeyword_1_0; }

		//PRE_AUTH_SM
		public EnumLiteralDeclaration getPRE_AUTH_SMEnumLiteralDeclaration_2() { return cPRE_AUTH_SMEnumLiteralDeclaration_2; }

		//"PRE_AUTH_SM"
		public Keyword getPRE_AUTH_SMPRE_AUTH_SMKeyword_2_0() { return cPRE_AUTH_SMPRE_AUTH_SMKeyword_2_0; }

		//REDUCED_RESOURCE
		public EnumLiteralDeclaration getREDUCED_RESOURCEEnumLiteralDeclaration_3() { return cREDUCED_RESOURCEEnumLiteralDeclaration_3; }

		//"REDUCED_RESOURCE"
		public Keyword getREDUCED_RESOURCEREDUCED_RESOURCEKeyword_3_0() { return cREDUCED_RESOURCEREDUCED_RESOURCEKeyword_3_0; }
	}
	
	private EntityElements pEntity;
	private SocialMachineElements pSocialMachine;
	private RelationshipGroupElements pRelationshipGroup;
	private OAuthRelationshipElements pOAuthRelationship;
	private GeneralRelationshipElements pGeneralRelationship;
	private GeneralConfigParameterElements pGeneralConfigParameter;
	private RelationshipConstraintElements pRelationshipConstraint;
	private RelationshipConstraintFullAccessElements pRelationshipConstraintFullAccess;
	private RelationshipConstraintListOfOpsElements pRelationshipConstraintListOfOps;
	private ComputationalUnitElements pComputationalUnit;
	private ProvidedServiceElements pProvidedService;
	private OperationConstraintElements pOperationConstraint;
	private GeneralConstraintElements pGeneralConstraint;
	private OperationConstraintTypeElements unknownRuleOperationConstraintType;
	
	private final Grammar grammar;

	private XbaseGrammarAccess gaXbase;

	@Inject
	public SMADLGrammarAccess(GrammarProvider grammarProvider,
		XbaseGrammarAccess gaXbase) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaXbase = gaXbase;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.smadl.SMADL".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public XbaseGrammarAccess getXbaseGrammarAccess() {
		return gaXbase;
	}

	
	//Entity:
	//
	//	entities+=SocialMachine*;
	public EntityElements getEntityAccess() {
		return (pEntity != null) ? pEntity : (pEntity = new EntityElements());
	}
	
	public ParserRule getEntityRule() {
		return getEntityAccess().getRule();
	}

	//SocialMachine:
	//
	//	"SocialMachine" name=ValidID ("relates to" dependencies+=[SocialMachine|ValidID] (","
	//
	//	dependencies+=[SocialMachine|ValidID])*)? "{" (generalConstraints=GeneralConstraint ";"?)?
	//
	//	relationshipGroup=RelationshipGroup? constructors+=ComputationalUnit* wrapperInterface+=ProvidedService* "}";
	public SocialMachineElements getSocialMachineAccess() {
		return (pSocialMachine != null) ? pSocialMachine : (pSocialMachine = new SocialMachineElements());
	}
	
	public ParserRule getSocialMachineRule() {
		return getSocialMachineAccess().getRule();
	}

	//RelationshipGroup:
	//
	//	"Relationships" "{" relationships+=(OAuthRelationship | GeneralRelationship)+ "}";
	public RelationshipGroupElements getRelationshipGroupAccess() {
		return (pRelationshipGroup != null) ? pRelationshipGroup : (pRelationshipGroup = new RelationshipGroupElements());
	}
	
	public ParserRule getRelationshipGroupRule() {
		return getRelationshipGroupAccess().getRule();
	}

	//OAuthRelationship:
	//
	//	name=ValidID "with" target=[SocialMachine|ValidID] "[" "uri" "=" uri=STRING ";"? "api-key" "=" apiKey=STRING ";"?
	//
	//	"secret" "=" secret=STRING ";"? "user-token" "=" userToken=STRING ";"? "]" constraint=RelationshipConstraint?;
	public OAuthRelationshipElements getOAuthRelationshipAccess() {
		return (pOAuthRelationship != null) ? pOAuthRelationship : (pOAuthRelationship = new OAuthRelationshipElements());
	}
	
	public ParserRule getOAuthRelationshipRule() {
		return getOAuthRelationshipAccess().getRule();
	}

	//GeneralRelationship:
	//
	//	name=ValidID "with" target=[SocialMachine|ValidID] "[" configParams+=GeneralConfigParameter* "]"
	//
	//	constraint=RelationshipConstraint?;
	public GeneralRelationshipElements getGeneralRelationshipAccess() {
		return (pGeneralRelationship != null) ? pGeneralRelationship : (pGeneralRelationship = new GeneralRelationshipElements());
	}
	
	public ParserRule getGeneralRelationshipRule() {
		return getGeneralRelationshipAccess().getRule();
	}

	//GeneralConfigParameter:
	//
	//	name=ValidID "=" value=(Number | STRING) ";"?;
	public GeneralConfigParameterElements getGeneralConfigParameterAccess() {
		return (pGeneralConfigParameter != null) ? pGeneralConfigParameter : (pGeneralConfigParameter = new GeneralConfigParameterElements());
	}
	
	public ParserRule getGeneralConfigParameterRule() {
		return getGeneralConfigParameterAccess().getRule();
	}

	//RelationshipConstraint:
	//
	//	"type" ":" type=(RelationshipConstraintFullAccess | RelationshipConstraintListOfOps);
	public RelationshipConstraintElements getRelationshipConstraintAccess() {
		return (pRelationshipConstraint != null) ? pRelationshipConstraint : (pRelationshipConstraint = new RelationshipConstraintElements());
	}
	
	public ParserRule getRelationshipConstraintRule() {
		return getRelationshipConstraintAccess().getRule();
	}

	//RelationshipConstraintFullAccess:
	//
	//	name="FULL_ACCESS";
	public RelationshipConstraintFullAccessElements getRelationshipConstraintFullAccessAccess() {
		return (pRelationshipConstraintFullAccess != null) ? pRelationshipConstraintFullAccess : (pRelationshipConstraintFullAccess = new RelationshipConstraintFullAccessElements());
	}
	
	public ParserRule getRelationshipConstraintFullAccessRule() {
		return getRelationshipConstraintFullAccessAccess().getRule();
	}

	//RelationshipConstraintListOfOps:
	//
	//	name="LIST_OF_OPS" "(" operations+=[ProvidedService] ("," operations+=[ProvidedService])* ")";
	public RelationshipConstraintListOfOpsElements getRelationshipConstraintListOfOpsAccess() {
		return (pRelationshipConstraintListOfOps != null) ? pRelationshipConstraintListOfOps : (pRelationshipConstraintListOfOps = new RelationshipConstraintListOfOpsElements());
	}
	
	public ParserRule getRelationshipConstraintListOfOpsRule() {
		return getRelationshipConstraintListOfOpsAccess().getRule();
	}

	//ComputationalUnit:
	//
	//	{ComputationalUnit} "constructor" "(" parameters+=FullJvmFormalParameter* ("," parameters+=FullJvmFormalParameter)*
	//
	//	")" body=XBlockExpression?;
	public ComputationalUnitElements getComputationalUnitAccess() {
		return (pComputationalUnit != null) ? pComputationalUnit : (pComputationalUnit = new ComputationalUnitElements());
	}
	
	public ParserRule getComputationalUnitRule() {
		return getComputationalUnitAccess().getRule();
	}

	//ProvidedService:
	//
	//	{ProvidedService} "op" name=ValidID ("returns" returnType=JvmTypeReference)? "(" parameters+=FullJvmFormalParameter*
	//
	//	("," parameters+=FullJvmFormalParameter)* ")" opConstraint=OperationConstraint?;
	public ProvidedServiceElements getProvidedServiceAccess() {
		return (pProvidedService != null) ? pProvidedService : (pProvidedService = new ProvidedServiceElements());
	}
	
	public ParserRule getProvidedServiceRule() {
		return getProvidedServiceAccess().getRule();
	}

	//OperationConstraint:
	//
	//	"constraint" type+=OperationConstraintType+;
	public OperationConstraintElements getOperationConstraintAccess() {
		return (pOperationConstraint != null) ? pOperationConstraint : (pOperationConstraint = new OperationConstraintElements());
	}
	
	public ParserRule getOperationConstraintRule() {
		return getOperationConstraintAccess().getRule();
	}

	//GeneralConstraint:
	//
	//	"general constraint" type=OperationConstraintType;
	public GeneralConstraintElements getGeneralConstraintAccess() {
		return (pGeneralConstraint != null) ? pGeneralConstraint : (pGeneralConstraint = new GeneralConstraintElements());
	}
	
	public ParserRule getGeneralConstraintRule() {
		return getGeneralConstraintAccess().getRule();
	}

	////Four constraint types that can be used in specific or general constraints
	//
	//enum OperationConstraintType:
	//
	//	UNLIMITED | REQUESTS_PER_PERIOD | PRE_AUTH_SM | REDUCED_RESOURCE;
	public OperationConstraintTypeElements getOperationConstraintTypeAccess() {
		return (unknownRuleOperationConstraintType != null) ? unknownRuleOperationConstraintType : (unknownRuleOperationConstraintType = new OperationConstraintTypeElements());
	}
	
	public EnumRule getOperationConstraintTypeRule() {
		return getOperationConstraintTypeAccess().getRule();
	}

	//XExpression:
	//
	//	XAssignment;
	public XbaseGrammarAccess.XExpressionElements getXExpressionAccess() {
		return gaXbase.getXExpressionAccess();
	}
	
	public ParserRule getXExpressionRule() {
		return getXExpressionAccess().getRule();
	}

	//XAssignment returns XExpression:
	//
	//	{XAssignment} / * (declaringType=[types::JvmDeclaredType] '::')? * /
	//
	//	feature=[types::JvmIdentifiableElement|FeatureCallID] OpSingleAssign value=XAssignment | XOrExpression (=>
	//
	//	({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpMultiAssign])
	//
	//	rightOperand=XAssignment)?;
	public XbaseGrammarAccess.XAssignmentElements getXAssignmentAccess() {
		return gaXbase.getXAssignmentAccess();
	}
	
	public ParserRule getXAssignmentRule() {
		return getXAssignmentAccess().getRule();
	}

	//OpSingleAssign:
	//
	//	"=";
	public XbaseGrammarAccess.OpSingleAssignElements getOpSingleAssignAccess() {
		return gaXbase.getOpSingleAssignAccess();
	}
	
	public ParserRule getOpSingleAssignRule() {
		return getOpSingleAssignAccess().getRule();
	}

	//OpMultiAssign:
	//
	//	"+=" | "-=";
	public XbaseGrammarAccess.OpMultiAssignElements getOpMultiAssignAccess() {
		return gaXbase.getOpMultiAssignAccess();
	}
	
	public ParserRule getOpMultiAssignRule() {
		return getOpMultiAssignAccess().getRule();
	}

	//XOrExpression returns XExpression:
	//
	//	XAndExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpOr])
	//
	//	rightOperand=XAndExpression)*;
	public XbaseGrammarAccess.XOrExpressionElements getXOrExpressionAccess() {
		return gaXbase.getXOrExpressionAccess();
	}
	
	public ParserRule getXOrExpressionRule() {
		return getXOrExpressionAccess().getRule();
	}

	//OpOr:
	//
	//	"||";
	public XbaseGrammarAccess.OpOrElements getOpOrAccess() {
		return gaXbase.getOpOrAccess();
	}
	
	public ParserRule getOpOrRule() {
		return getOpOrAccess().getRule();
	}

	//XAndExpression returns XExpression:
	//
	//	XEqualityExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpAnd])
	//
	//	rightOperand=XEqualityExpression)*;
	public XbaseGrammarAccess.XAndExpressionElements getXAndExpressionAccess() {
		return gaXbase.getXAndExpressionAccess();
	}
	
	public ParserRule getXAndExpressionRule() {
		return getXAndExpressionAccess().getRule();
	}

	//OpAnd:
	//
	//	"&&";
	public XbaseGrammarAccess.OpAndElements getOpAndAccess() {
		return gaXbase.getOpAndAccess();
	}
	
	public ParserRule getOpAndRule() {
		return getOpAndAccess().getRule();
	}

	//XEqualityExpression returns XExpression:
	//
	//	XRelationalExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpEquality])
	//
	//	rightOperand=XRelationalExpression)*;
	public XbaseGrammarAccess.XEqualityExpressionElements getXEqualityExpressionAccess() {
		return gaXbase.getXEqualityExpressionAccess();
	}
	
	public ParserRule getXEqualityExpressionRule() {
		return getXEqualityExpressionAccess().getRule();
	}

	//OpEquality:
	//
	//	"==" | "!=" | "===" | "!==";
	public XbaseGrammarAccess.OpEqualityElements getOpEqualityAccess() {
		return gaXbase.getOpEqualityAccess();
	}
	
	public ParserRule getOpEqualityRule() {
		return getOpEqualityAccess().getRule();
	}

	//XRelationalExpression returns XExpression:
	//
	//	XOtherOperatorExpression (=> ({XInstanceOfExpression.expression=current} "instanceof") type=JvmTypeReference | =>
	//
	//	({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpCompare])
	//
	//	rightOperand=XOtherOperatorExpression)*;
	public XbaseGrammarAccess.XRelationalExpressionElements getXRelationalExpressionAccess() {
		return gaXbase.getXRelationalExpressionAccess();
	}
	
	public ParserRule getXRelationalExpressionRule() {
		return getXRelationalExpressionAccess().getRule();
	}

	//OpCompare:
	//
	//	">=" | "<=" | ">" | "<";
	public XbaseGrammarAccess.OpCompareElements getOpCompareAccess() {
		return gaXbase.getOpCompareAccess();
	}
	
	public ParserRule getOpCompareRule() {
		return getOpCompareAccess().getRule();
	}

	//XOtherOperatorExpression returns XExpression:
	//
	//	XAdditiveExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpOther])
	//
	//	rightOperand=XAdditiveExpression)*;
	public XbaseGrammarAccess.XOtherOperatorExpressionElements getXOtherOperatorExpressionAccess() {
		return gaXbase.getXOtherOperatorExpressionAccess();
	}
	
	public ParserRule getXOtherOperatorExpressionRule() {
		return getXOtherOperatorExpressionAccess().getRule();
	}

	//OpOther:
	//
	//	"->" | "..<" | ">" ".." | ".." | "=>" | ">" (=> (">" ">") | ">") | "<" (=> ("<" "<") | "<") | "<>" | "?:" | "<=>";
	public XbaseGrammarAccess.OpOtherElements getOpOtherAccess() {
		return gaXbase.getOpOtherAccess();
	}
	
	public ParserRule getOpOtherRule() {
		return getOpOtherAccess().getRule();
	}

	//XAdditiveExpression returns XExpression:
	//
	//	XMultiplicativeExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpAdd])
	//
	//	rightOperand=XMultiplicativeExpression)*;
	public XbaseGrammarAccess.XAdditiveExpressionElements getXAdditiveExpressionAccess() {
		return gaXbase.getXAdditiveExpressionAccess();
	}
	
	public ParserRule getXAdditiveExpressionRule() {
		return getXAdditiveExpressionAccess().getRule();
	}

	//OpAdd:
	//
	//	"+" | "-";
	public XbaseGrammarAccess.OpAddElements getOpAddAccess() {
		return gaXbase.getOpAddAccess();
	}
	
	public ParserRule getOpAddRule() {
		return getOpAddAccess().getRule();
	}

	//XMultiplicativeExpression returns XExpression:
	//
	//	XUnaryOperation (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpMulti])
	//
	//	rightOperand=XUnaryOperation)*;
	public XbaseGrammarAccess.XMultiplicativeExpressionElements getXMultiplicativeExpressionAccess() {
		return gaXbase.getXMultiplicativeExpressionAccess();
	}
	
	public ParserRule getXMultiplicativeExpressionRule() {
		return getXMultiplicativeExpressionAccess().getRule();
	}

	//OpMulti:
	//
	//	"*" | "**" | "/" | "%";
	public XbaseGrammarAccess.OpMultiElements getOpMultiAccess() {
		return gaXbase.getOpMultiAccess();
	}
	
	public ParserRule getOpMultiRule() {
		return getOpMultiAccess().getRule();
	}

	//XUnaryOperation returns XExpression:
	//
	//	{XUnaryOperation} feature=[types::JvmIdentifiableElement|OpUnary] operand=XUnaryOperation | XCastedExpression;
	public XbaseGrammarAccess.XUnaryOperationElements getXUnaryOperationAccess() {
		return gaXbase.getXUnaryOperationAccess();
	}
	
	public ParserRule getXUnaryOperationRule() {
		return getXUnaryOperationAccess().getRule();
	}

	//OpUnary:
	//
	//	"!" | "-" | "+";
	public XbaseGrammarAccess.OpUnaryElements getOpUnaryAccess() {
		return gaXbase.getOpUnaryAccess();
	}
	
	public ParserRule getOpUnaryRule() {
		return getOpUnaryAccess().getRule();
	}

	//XCastedExpression returns XExpression:
	//
	//	XMemberFeatureCall (=> ({XCastedExpression.target=current} "as") type=JvmTypeReference)*;
	public XbaseGrammarAccess.XCastedExpressionElements getXCastedExpressionAccess() {
		return gaXbase.getXCastedExpressionAccess();
	}
	
	public ParserRule getXCastedExpressionRule() {
		return getXCastedExpressionAccess().getRule();
	}

	//XMemberFeatureCall returns XExpression:
	//
	//	XPrimaryExpression (=> ({XAssignment.assignable=current} "." feature=[types::JvmIdentifiableElement|FeatureCallID]
	//
	//	OpSingleAssign) value=XAssignment | => ({XMemberFeatureCall.memberCallTarget=current} ("." | nullSafe?="?." |
	//
	//	spreading?="*.")) ("<" typeArguments+=JvmArgumentTypeReference ("," typeArguments+=JvmArgumentTypeReference)* ">")?
	//
	//	feature=[types::JvmIdentifiableElement|FeatureCallID] (=> explicitOperationCall?="("
	//
	//	(memberCallArguments+=XShortClosure | memberCallArguments+=XExpression ("," memberCallArguments+=XExpression)*)?
	//
	//	")")? memberCallArguments+=XClosure?)*;
	public XbaseGrammarAccess.XMemberFeatureCallElements getXMemberFeatureCallAccess() {
		return gaXbase.getXMemberFeatureCallAccess();
	}
	
	public ParserRule getXMemberFeatureCallRule() {
		return getXMemberFeatureCallAccess().getRule();
	}

	//XPrimaryExpression returns XExpression:
	//
	//	XConstructorCall | XBlockExpression | XSwitchExpression | XFeatureCall | XLiteral | XIfExpression |
	//
	//	XForLoopExpression | XWhileExpression | XDoWhileExpression | XThrowExpression | XReturnExpression |
	//
	//	XTryCatchFinallyExpression | XParenthesizedExpression;
	public XbaseGrammarAccess.XPrimaryExpressionElements getXPrimaryExpressionAccess() {
		return gaXbase.getXPrimaryExpressionAccess();
	}
	
	public ParserRule getXPrimaryExpressionRule() {
		return getXPrimaryExpressionAccess().getRule();
	}

	//XLiteral returns XExpression:
	//
	//	XCollectionLiteral | XClosure | XBooleanLiteral | XNumberLiteral | XNullLiteral | XStringLiteral | XTypeLiteral;
	public XbaseGrammarAccess.XLiteralElements getXLiteralAccess() {
		return gaXbase.getXLiteralAccess();
	}
	
	public ParserRule getXLiteralRule() {
		return getXLiteralAccess().getRule();
	}

	//XCollectionLiteral:
	//
	//	XSetLiteral | XListLiteral;
	public XbaseGrammarAccess.XCollectionLiteralElements getXCollectionLiteralAccess() {
		return gaXbase.getXCollectionLiteralAccess();
	}
	
	public ParserRule getXCollectionLiteralRule() {
		return getXCollectionLiteralAccess().getRule();
	}

	//XSetLiteral:
	//
	//	{XSetLiteral} "#" "{" (elements+=XExpression ("," elements+=XExpression)*)? "}";
	public XbaseGrammarAccess.XSetLiteralElements getXSetLiteralAccess() {
		return gaXbase.getXSetLiteralAccess();
	}
	
	public ParserRule getXSetLiteralRule() {
		return getXSetLiteralAccess().getRule();
	}

	//XListLiteral:
	//
	//	{XListLiteral} "#" "[" (elements+=XExpression ("," elements+=XExpression)*)? "]";
	public XbaseGrammarAccess.XListLiteralElements getXListLiteralAccess() {
		return gaXbase.getXListLiteralAccess();
	}
	
	public ParserRule getXListLiteralRule() {
		return getXListLiteralAccess().getRule();
	}

	//XClosure returns XExpression:
	//
	//	=> ({XClosure} "[") => ((declaredFormalParameters+=JvmFormalParameter (","
	//
	//	declaredFormalParameters+=JvmFormalParameter)*)? explicitSyntax?="|")? expression=XExpressionInClosure "]";
	public XbaseGrammarAccess.XClosureElements getXClosureAccess() {
		return gaXbase.getXClosureAccess();
	}
	
	public ParserRule getXClosureRule() {
		return getXClosureAccess().getRule();
	}

	//XExpressionInClosure returns XExpression:
	//
	//	{XBlockExpression} (expressions+=XExpressionInsideBlock ";"?)*;
	public XbaseGrammarAccess.XExpressionInClosureElements getXExpressionInClosureAccess() {
		return gaXbase.getXExpressionInClosureAccess();
	}
	
	public ParserRule getXExpressionInClosureRule() {
		return getXExpressionInClosureAccess().getRule();
	}

	//XShortClosure returns XExpression:
	//
	//	=> ({XClosure} (declaredFormalParameters+=JvmFormalParameter ("," declaredFormalParameters+=JvmFormalParameter)*)?
	//
	//	explicitSyntax?="|") expression=XExpression;
	public XbaseGrammarAccess.XShortClosureElements getXShortClosureAccess() {
		return gaXbase.getXShortClosureAccess();
	}
	
	public ParserRule getXShortClosureRule() {
		return getXShortClosureAccess().getRule();
	}

	//XParenthesizedExpression returns XExpression:
	//
	//	"(" XExpression ")";
	public XbaseGrammarAccess.XParenthesizedExpressionElements getXParenthesizedExpressionAccess() {
		return gaXbase.getXParenthesizedExpressionAccess();
	}
	
	public ParserRule getXParenthesizedExpressionRule() {
		return getXParenthesizedExpressionAccess().getRule();
	}

	//XIfExpression returns XExpression:
	//
	//	{XIfExpression} "if" "(" if=XExpression ")" then=XExpression ("else" else=XExpression)?;
	public XbaseGrammarAccess.XIfExpressionElements getXIfExpressionAccess() {
		return gaXbase.getXIfExpressionAccess();
	}
	
	public ParserRule getXIfExpressionRule() {
		return getXIfExpressionAccess().getRule();
	}

	//XSwitchExpression returns XExpression:
	//
	//	{XSwitchExpression} "switch" (=> (localVarName=ValidID ":")? switch=XExpression | => ("(" localVarName=ValidID ":")
	//
	//	switch=XExpression ")") "{" cases+=XCasePart+ ("default" ":" default=XExpression)? "}";
	public XbaseGrammarAccess.XSwitchExpressionElements getXSwitchExpressionAccess() {
		return gaXbase.getXSwitchExpressionAccess();
	}
	
	public ParserRule getXSwitchExpressionRule() {
		return getXSwitchExpressionAccess().getRule();
	}

	//XCasePart:
	//
	//	typeGuard=JvmTypeReference? ("case" case=XExpression)? ":" then=XExpression;
	public XbaseGrammarAccess.XCasePartElements getXCasePartAccess() {
		return gaXbase.getXCasePartAccess();
	}
	
	public ParserRule getXCasePartRule() {
		return getXCasePartAccess().getRule();
	}

	//XForLoopExpression returns XExpression:
	//
	//	{XForLoopExpression} "for" "(" declaredParam=JvmFormalParameter ":" forExpression=XExpression ")"
	//
	//	eachExpression=XExpression;
	public XbaseGrammarAccess.XForLoopExpressionElements getXForLoopExpressionAccess() {
		return gaXbase.getXForLoopExpressionAccess();
	}
	
	public ParserRule getXForLoopExpressionRule() {
		return getXForLoopExpressionAccess().getRule();
	}

	//XWhileExpression returns XExpression:
	//
	//	{XWhileExpression} "while" "(" predicate=XExpression ")" body=XExpression;
	public XbaseGrammarAccess.XWhileExpressionElements getXWhileExpressionAccess() {
		return gaXbase.getXWhileExpressionAccess();
	}
	
	public ParserRule getXWhileExpressionRule() {
		return getXWhileExpressionAccess().getRule();
	}

	//XDoWhileExpression returns XExpression:
	//
	//	{XDoWhileExpression} "do" body=XExpression "while" "(" predicate=XExpression ")";
	public XbaseGrammarAccess.XDoWhileExpressionElements getXDoWhileExpressionAccess() {
		return gaXbase.getXDoWhileExpressionAccess();
	}
	
	public ParserRule getXDoWhileExpressionRule() {
		return getXDoWhileExpressionAccess().getRule();
	}

	//XBlockExpression returns XExpression:
	//
	//	{XBlockExpression} "{" (expressions+=XExpressionInsideBlock ";"?)* "}";
	public XbaseGrammarAccess.XBlockExpressionElements getXBlockExpressionAccess() {
		return gaXbase.getXBlockExpressionAccess();
	}
	
	public ParserRule getXBlockExpressionRule() {
		return getXBlockExpressionAccess().getRule();
	}

	//XExpressionInsideBlock returns XExpression:
	//
	//	XVariableDeclaration | XExpression;
	public XbaseGrammarAccess.XExpressionInsideBlockElements getXExpressionInsideBlockAccess() {
		return gaXbase.getXExpressionInsideBlockAccess();
	}
	
	public ParserRule getXExpressionInsideBlockRule() {
		return getXExpressionInsideBlockAccess().getRule();
	}

	//XVariableDeclaration returns XExpression:
	//
	//	{XVariableDeclaration} (writeable?="var" | "val") (=> (type=JvmTypeReference name=ValidID) | name=ValidID) ("="
	//
	//	right=XExpression)?;
	public XbaseGrammarAccess.XVariableDeclarationElements getXVariableDeclarationAccess() {
		return gaXbase.getXVariableDeclarationAccess();
	}
	
	public ParserRule getXVariableDeclarationRule() {
		return getXVariableDeclarationAccess().getRule();
	}

	//JvmFormalParameter returns types::JvmFormalParameter:
	//
	//	parameterType=JvmTypeReference? name=ValidID;
	public XbaseGrammarAccess.JvmFormalParameterElements getJvmFormalParameterAccess() {
		return gaXbase.getJvmFormalParameterAccess();
	}
	
	public ParserRule getJvmFormalParameterRule() {
		return getJvmFormalParameterAccess().getRule();
	}

	//FullJvmFormalParameter returns types::JvmFormalParameter:
	//
	//	parameterType=JvmTypeReference name=ValidID;
	public XbaseGrammarAccess.FullJvmFormalParameterElements getFullJvmFormalParameterAccess() {
		return gaXbase.getFullJvmFormalParameterAccess();
	}
	
	public ParserRule getFullJvmFormalParameterRule() {
		return getFullJvmFormalParameterAccess().getRule();
	}

	//XFeatureCall returns XExpression:
	//
	//	{XFeatureCall} declaringType=[types::JvmDeclaredType|StaticQualifier]? ("<" typeArguments+=JvmArgumentTypeReference
	//
	//	("," typeArguments+=JvmArgumentTypeReference)* ">")? feature=[types::JvmIdentifiableElement|IdOrSuper] (=>
	//
	//	explicitOperationCall?="(" (featureCallArguments+=XShortClosure | featureCallArguments+=XExpression (","
	//
	//	featureCallArguments+=XExpression)*)? ")")? featureCallArguments+=XClosure?;
	public XbaseGrammarAccess.XFeatureCallElements getXFeatureCallAccess() {
		return gaXbase.getXFeatureCallAccess();
	}
	
	public ParserRule getXFeatureCallRule() {
		return getXFeatureCallAccess().getRule();
	}

	//FeatureCallID:
	//
	//	ValidID | "extends" | "static" | "import" | "extension";
	public XbaseGrammarAccess.FeatureCallIDElements getFeatureCallIDAccess() {
		return gaXbase.getFeatureCallIDAccess();
	}
	
	public ParserRule getFeatureCallIDRule() {
		return getFeatureCallIDAccess().getRule();
	}

	//IdOrSuper:
	//
	//	FeatureCallID | "super";
	public XbaseGrammarAccess.IdOrSuperElements getIdOrSuperAccess() {
		return gaXbase.getIdOrSuperAccess();
	}
	
	public ParserRule getIdOrSuperRule() {
		return getIdOrSuperAccess().getRule();
	}

	//// This is a workaround since ANTLR will not be able to resolve
	//
	//
	//// StaticQualifier: ValidID ('::' ValidID)*; and XFeatureCall: (StaticQualifier '::')? ValidID
	//
	//
	//// Make sure to change the value converter if you change the syntax of the StaticQualifier
	// StaticQualifier:
	//
	//	(ValidID "::")+;
	public XbaseGrammarAccess.StaticQualifierElements getStaticQualifierAccess() {
		return gaXbase.getStaticQualifierAccess();
	}
	
	public ParserRule getStaticQualifierRule() {
		return getStaticQualifierAccess().getRule();
	}

	//XConstructorCall returns XExpression:
	//
	//	{XConstructorCall} "new" constructor=[types::JvmConstructor|QualifiedName] ("<"
	//
	//	typeArguments+=JvmArgumentTypeReference ("," typeArguments+=JvmArgumentTypeReference)* ">")? ("("
	//
	//	(arguments+=XShortClosure | arguments+=XExpression ("," arguments+=XExpression)*)? ")")? arguments+=XClosure?;
	public XbaseGrammarAccess.XConstructorCallElements getXConstructorCallAccess() {
		return gaXbase.getXConstructorCallAccess();
	}
	
	public ParserRule getXConstructorCallRule() {
		return getXConstructorCallAccess().getRule();
	}

	//XBooleanLiteral returns XExpression:
	//
	//	{XBooleanLiteral} ("false" | isTrue?="true");
	public XbaseGrammarAccess.XBooleanLiteralElements getXBooleanLiteralAccess() {
		return gaXbase.getXBooleanLiteralAccess();
	}
	
	public ParserRule getXBooleanLiteralRule() {
		return getXBooleanLiteralAccess().getRule();
	}

	//XNullLiteral returns XExpression:
	//
	//	{XNullLiteral} "null";
	public XbaseGrammarAccess.XNullLiteralElements getXNullLiteralAccess() {
		return gaXbase.getXNullLiteralAccess();
	}
	
	public ParserRule getXNullLiteralRule() {
		return getXNullLiteralAccess().getRule();
	}

	//XNumberLiteral returns XExpression:
	//
	//	{XNumberLiteral} value=Number;
	public XbaseGrammarAccess.XNumberLiteralElements getXNumberLiteralAccess() {
		return gaXbase.getXNumberLiteralAccess();
	}
	
	public ParserRule getXNumberLiteralRule() {
		return getXNumberLiteralAccess().getRule();
	}

	//XStringLiteral returns XExpression:
	//
	//	{XStringLiteral} value=STRING;
	public XbaseGrammarAccess.XStringLiteralElements getXStringLiteralAccess() {
		return gaXbase.getXStringLiteralAccess();
	}
	
	public ParserRule getXStringLiteralRule() {
		return getXStringLiteralAccess().getRule();
	}

	//XTypeLiteral returns XExpression:
	//
	//	{XTypeLiteral} "typeof" "(" type=[types::JvmType|QualifiedName] arrayDimensions+=ArrayBrackets* ")";
	public XbaseGrammarAccess.XTypeLiteralElements getXTypeLiteralAccess() {
		return gaXbase.getXTypeLiteralAccess();
	}
	
	public ParserRule getXTypeLiteralRule() {
		return getXTypeLiteralAccess().getRule();
	}

	//XThrowExpression returns XExpression:
	//
	//	{XThrowExpression} "throw" expression=XExpression;
	public XbaseGrammarAccess.XThrowExpressionElements getXThrowExpressionAccess() {
		return gaXbase.getXThrowExpressionAccess();
	}
	
	public ParserRule getXThrowExpressionRule() {
		return getXThrowExpressionAccess().getRule();
	}

	//XReturnExpression returns XExpression:
	//
	//	{XReturnExpression} "return" => expression=XExpression?;
	public XbaseGrammarAccess.XReturnExpressionElements getXReturnExpressionAccess() {
		return gaXbase.getXReturnExpressionAccess();
	}
	
	public ParserRule getXReturnExpressionRule() {
		return getXReturnExpressionAccess().getRule();
	}

	//XTryCatchFinallyExpression returns XExpression:
	//
	//	{XTryCatchFinallyExpression} "try" expression=XExpression (catchClauses+=XCatchClause+ ("finally"
	//
	//	finallyExpression=XExpression)? | "finally" finallyExpression=XExpression);
	public XbaseGrammarAccess.XTryCatchFinallyExpressionElements getXTryCatchFinallyExpressionAccess() {
		return gaXbase.getXTryCatchFinallyExpressionAccess();
	}
	
	public ParserRule getXTryCatchFinallyExpressionRule() {
		return getXTryCatchFinallyExpressionAccess().getRule();
	}

	//XCatchClause:
	//
	//	"catch" "(" declaredParam=FullJvmFormalParameter ")" expression=XExpression;
	public XbaseGrammarAccess.XCatchClauseElements getXCatchClauseAccess() {
		return gaXbase.getXCatchClauseAccess();
	}
	
	public ParserRule getXCatchClauseRule() {
		return getXCatchClauseAccess().getRule();
	}

	//QualifiedName:
	//
	//	ValidID ("." ValidID)*;
	public XbaseGrammarAccess.QualifiedNameElements getQualifiedNameAccess() {
		return gaXbase.getQualifiedNameAccess();
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}

	//Number hidden():
	//
	//	HEX | (INT | DECIMAL) ("." (INT | DECIMAL))?;
	public XbaseGrammarAccess.NumberElements getNumberAccess() {
		return gaXbase.getNumberAccess();
	}
	
	public ParserRule getNumberRule() {
		return getNumberAccess().getRule();
	}

	//terminal HEX:
	//
	//	("0x" | "0X") ("0".."9" | "a".."f" | "A".."F" | "_")+ ("#" (("b" | "B") ("i" | "I") | ("l" | "L")))?;
	public TerminalRule getHEXRule() {
		return gaXbase.getHEXRule();
	} 

	//terminal INT returns ecore::EInt:
	//
	//	"0".."9" ("0".."9" | "_")*;
	public TerminalRule getINTRule() {
		return gaXbase.getINTRule();
	} 

	//terminal DECIMAL:
	//
	//	INT (("e" | "E") ("+" | "-")? INT)? (("b" | "B") ("i" | "I" | "d" | "D") | ("l" | "L" | "d" | "D" | "f" | "F"))?;
	public TerminalRule getDECIMALRule() {
		return gaXbase.getDECIMALRule();
	} 

	//JvmTypeReference:
	//
	//	JvmParameterizedTypeReference => ({JvmGenericArrayTypeReference.componentType=current} ArrayBrackets)* |
	//
	//	XFunctionTypeRef;
	public XtypeGrammarAccess.JvmTypeReferenceElements getJvmTypeReferenceAccess() {
		return gaXbase.getJvmTypeReferenceAccess();
	}
	
	public ParserRule getJvmTypeReferenceRule() {
		return getJvmTypeReferenceAccess().getRule();
	}

	//ArrayBrackets:
	//
	//	"[" "]";
	public XtypeGrammarAccess.ArrayBracketsElements getArrayBracketsAccess() {
		return gaXbase.getArrayBracketsAccess();
	}
	
	public ParserRule getArrayBracketsRule() {
		return getArrayBracketsAccess().getRule();
	}

	//XFunctionTypeRef:
	//
	//	("(" (paramTypes+=JvmTypeReference ("," paramTypes+=JvmTypeReference)*)? ")")? "=>" returnType=JvmTypeReference;
	public XtypeGrammarAccess.XFunctionTypeRefElements getXFunctionTypeRefAccess() {
		return gaXbase.getXFunctionTypeRefAccess();
	}
	
	public ParserRule getXFunctionTypeRefRule() {
		return getXFunctionTypeRefAccess().getRule();
	}

	//JvmParameterizedTypeReference:
	//
	//	type=[JvmType|QualifiedName] ("<" arguments+=JvmArgumentTypeReference ("," arguments+=JvmArgumentTypeReference)*
	//
	//	">")?;
	public XtypeGrammarAccess.JvmParameterizedTypeReferenceElements getJvmParameterizedTypeReferenceAccess() {
		return gaXbase.getJvmParameterizedTypeReferenceAccess();
	}
	
	public ParserRule getJvmParameterizedTypeReferenceRule() {
		return getJvmParameterizedTypeReferenceAccess().getRule();
	}

	//JvmArgumentTypeReference returns JvmTypeReference:
	//
	//	JvmTypeReference | JvmWildcardTypeReference;
	public XtypeGrammarAccess.JvmArgumentTypeReferenceElements getJvmArgumentTypeReferenceAccess() {
		return gaXbase.getJvmArgumentTypeReferenceAccess();
	}
	
	public ParserRule getJvmArgumentTypeReferenceRule() {
		return getJvmArgumentTypeReferenceAccess().getRule();
	}

	//JvmWildcardTypeReference:
	//
	//	{JvmWildcardTypeReference} "?" (constraints+=JvmUpperBound | constraints+=JvmLowerBound)?;
	public XtypeGrammarAccess.JvmWildcardTypeReferenceElements getJvmWildcardTypeReferenceAccess() {
		return gaXbase.getJvmWildcardTypeReferenceAccess();
	}
	
	public ParserRule getJvmWildcardTypeReferenceRule() {
		return getJvmWildcardTypeReferenceAccess().getRule();
	}

	//JvmUpperBound:
	//
	//	"extends" typeReference=JvmTypeReference;
	public XtypeGrammarAccess.JvmUpperBoundElements getJvmUpperBoundAccess() {
		return gaXbase.getJvmUpperBoundAccess();
	}
	
	public ParserRule getJvmUpperBoundRule() {
		return getJvmUpperBoundAccess().getRule();
	}

	//JvmUpperBoundAnded returns JvmUpperBound:
	//
	//	"&" typeReference=JvmTypeReference;
	public XtypeGrammarAccess.JvmUpperBoundAndedElements getJvmUpperBoundAndedAccess() {
		return gaXbase.getJvmUpperBoundAndedAccess();
	}
	
	public ParserRule getJvmUpperBoundAndedRule() {
		return getJvmUpperBoundAndedAccess().getRule();
	}

	//JvmLowerBound:
	//
	//	"super" typeReference=JvmTypeReference;
	public XtypeGrammarAccess.JvmLowerBoundElements getJvmLowerBoundAccess() {
		return gaXbase.getJvmLowerBoundAccess();
	}
	
	public ParserRule getJvmLowerBoundRule() {
		return getJvmLowerBoundAccess().getRule();
	}

	//JvmTypeParameter:
	//
	//	name=ValidID (constraints+=JvmUpperBound constraints+=JvmUpperBoundAnded* | constraints+=JvmLowerBound)?;
	public XtypeGrammarAccess.JvmTypeParameterElements getJvmTypeParameterAccess() {
		return gaXbase.getJvmTypeParameterAccess();
	}
	
	public ParserRule getJvmTypeParameterRule() {
		return getJvmTypeParameterAccess().getRule();
	}

	//QualifiedNameWithWildcard:
	//
	//	QualifiedName "." "*";
	public XtypeGrammarAccess.QualifiedNameWithWildcardElements getQualifiedNameWithWildcardAccess() {
		return gaXbase.getQualifiedNameWithWildcardAccess();
	}
	
	public ParserRule getQualifiedNameWithWildcardRule() {
		return getQualifiedNameWithWildcardAccess().getRule();
	}

	//ValidID:
	//
	//	ID;
	public XtypeGrammarAccess.ValidIDElements getValidIDAccess() {
		return gaXbase.getValidIDAccess();
	}
	
	public ParserRule getValidIDRule() {
		return getValidIDAccess().getRule();
	}

	//XImportSection:
	//
	//	importDeclarations+=XImportDeclaration+;
	public XtypeGrammarAccess.XImportSectionElements getXImportSectionAccess() {
		return gaXbase.getXImportSectionAccess();
	}
	
	public ParserRule getXImportSectionRule() {
		return getXImportSectionAccess().getRule();
	}

	//XImportDeclaration:
	//
	//	"import" (static?="static" extension?="extension"? importedType=[JvmDeclaredType|QualifiedName] "." "*" |
	//
	//	importedType=[JvmDeclaredType|QualifiedName] | importedNamespace=QualifiedNameWithWildcard) ";"?;
	public XtypeGrammarAccess.XImportDeclarationElements getXImportDeclarationAccess() {
		return gaXbase.getXImportDeclarationAccess();
	}
	
	public ParserRule getXImportDeclarationRule() {
		return getXImportDeclarationAccess().getRule();
	}

	//terminal ID:
	//
	//	"^"? ("a".."z" | "A".."Z" | "$" | "_") ("a".."z" | "A".."Z" | "$" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaXbase.getIDRule();
	} 

	//terminal STRING:
	//
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaXbase.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaXbase.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaXbase.getSL_COMMENTRule();
	} 

	//terminal WS:
	//
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaXbase.getWSRule();
	} 

	//terminal ANY_OTHER:
	//
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaXbase.getANY_OTHERRule();
	} 
}
